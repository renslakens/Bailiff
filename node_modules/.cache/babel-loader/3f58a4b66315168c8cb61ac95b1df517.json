{"ast":null,"code":"import Piece from './piece.js';\nexport default class Bailiff extends Piece {\n  constructor(player) {\n    super(player, player === 1 ? \"https://upload.wikimedia.org/wikipedia/commons/4/45/Chess_plt45.svg\" : \"./img/grey-queen-chess.png\");\n  }\n\n  isMovePossible(src, dest) {\n    let mod = src % 5;\n    let diff = 5 - mod;\n    return Math.abs(src - dest) % 6 === 0 || Math.abs(src - dest) % 4 === 0 || Math.abs(src - dest) % 5 === 0 || dest >= src - mod && dest < src + diff;\n  }\n  /**\r\n   * get path between src and dest (src and dest exclusive)\r\n   * @param  {num} src  \r\n   * @param  {num} dest \r\n   * @return {[array]}      \r\n  */\n\n\n  getSrcToDestPath(src, dest) {\n    let path = [],\n        pathStart,\n        pathEnd,\n        incrementBy;\n\n    if (src > dest) {\n      pathStart = dest;\n      pathEnd = src;\n    } else {\n      pathStart = src;\n      pathEnd = dest;\n    }\n\n    if (Math.abs(src - dest) % 5 === 0) {\n      incrementBy = 5;\n      pathStart += 5;\n    } else if (Math.abs(src - dest) % 6 === 0) {\n      incrementBy = 6;\n      pathStart += 6;\n    } else if (Math.abs(src - dest) % 4 === 0) {\n      incrementBy = 4;\n      pathStart += 4;\n    } else {\n      incrementBy = 1;\n      pathStart += 1;\n    }\n\n    for (let i = pathStart; i < pathEnd; i += incrementBy) {\n      path.push(i);\n    }\n\n    return path;\n  }\n\n}","map":{"version":3,"sources":["D:\\Coding\\GitHub\\bailiff\\src\\pieces\\bailiff.js"],"names":["Piece","Bailiff","constructor","player","isMovePossible","src","dest","mod","diff","Math","abs","getSrcToDestPath","path","pathStart","pathEnd","incrementBy","i","push"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,YAAlB;AAEA,eAAe,MAAMC,OAAN,SAAsBD,KAAtB,CAA4B;AACvCE,EAAAA,WAAW,CAACC,MAAD,EAAQ;AACf,UAAMA,MAAN,EAAeA,MAAM,KAAK,CAAX,GAAc,qEAAd,GAAsF,4BAArG;AACH;;AAEDC,EAAAA,cAAc,CAACC,GAAD,EAAMC,IAAN,EAAW;AACrB,QAAIC,GAAG,GAAGF,GAAG,GAAG,CAAhB;AACA,QAAIG,IAAI,GAAG,IAAID,GAAf;AAEA,WAAQE,IAAI,CAACC,GAAL,CAASL,GAAG,GAAGC,IAAf,IAAuB,CAAvB,KAA6B,CAA7B,IAAkCG,IAAI,CAACC,GAAL,CAASL,GAAG,GAAGC,IAAf,IAAuB,CAAvB,KAA6B,CAAhE,IACNG,IAAI,CAACC,GAAL,CAASL,GAAG,GAAGC,IAAf,IAAuB,CAAvB,KAA6B,CAA7B,IAAmCA,IAAI,IAAKD,GAAG,GAAGE,GAAf,IAAuBD,IAAI,GAAID,GAAG,GAAGG,IADzE;AAEH;AAED;;;;;;;;AAOAG,EAAAA,gBAAgB,CAACN,GAAD,EAAMC,IAAN,EAAW;AACvB,QAAIM,IAAI,GAAG,EAAX;AAAA,QAAeC,SAAf;AAAA,QAA0BC,OAA1B;AAAA,QAAmCC,WAAnC;;AACA,QAAGV,GAAG,GAAGC,IAAT,EAAc;AACVO,MAAAA,SAAS,GAAGP,IAAZ;AACAQ,MAAAA,OAAO,GAAGT,GAAV;AACH,KAHD,MAGK;AACDQ,MAAAA,SAAS,GAAGR,GAAZ;AACAS,MAAAA,OAAO,GAAGR,IAAV;AACH;;AACD,QAAGG,IAAI,CAACC,GAAL,CAASL,GAAG,GAAGC,IAAf,IAAuB,CAAvB,KAA6B,CAAhC,EAAkC;AAC9BS,MAAAA,WAAW,GAAG,CAAd;AACAF,MAAAA,SAAS,IAAI,CAAb;AACH,KAHD,MAGM,IAAGJ,IAAI,CAACC,GAAL,CAASL,GAAG,GAAGC,IAAf,IAAuB,CAAvB,KAA6B,CAAhC,EAAkC;AACpCS,MAAAA,WAAW,GAAG,CAAd;AACAF,MAAAA,SAAS,IAAI,CAAb;AACH,KAHK,MAGA,IAAGJ,IAAI,CAACC,GAAL,CAASL,GAAG,GAAGC,IAAf,IAAuB,CAAvB,KAA6B,CAAhC,EAAkC;AACpCS,MAAAA,WAAW,GAAG,CAAd;AACAF,MAAAA,SAAS,IAAI,CAAb;AACH,KAHK,MAGD;AACDE,MAAAA,WAAW,GAAG,CAAd;AACAF,MAAAA,SAAS,IAAI,CAAb;AACH;;AAED,SAAI,IAAIG,CAAC,GAAGH,SAAZ,EAAuBG,CAAC,GAAGF,OAA3B,EAAoCE,CAAC,IAAED,WAAvC,EAAmD;AAC/CH,MAAAA,IAAI,CAACK,IAAL,CAAUD,CAAV;AACH;;AACD,WAAOJ,IAAP;AACC;;AA/CkC","sourcesContent":["import Piece from './piece.js';\r\n\r\nexport default class Bailiff extends Piece {\r\n    constructor(player){\r\n        super(player, (player === 1? \"https://upload.wikimedia.org/wikipedia/commons/4/45/Chess_plt45.svg\" : \"./img/grey-queen-chess.png\"));\r\n    }\r\n\r\n    isMovePossible(src, dest){\r\n        let mod = src % 5;\r\n        let diff = 5 - mod;\r\n        \r\n        return (Math.abs(src - dest) % 6 === 0 || Math.abs(src - dest) % 4 === 0) ||\r\n        (Math.abs(src - dest) % 5 === 0 || (dest >= (src - mod) && dest < (src + diff)));\r\n    }\r\n\r\n    /**\r\n     * get path between src and dest (src and dest exclusive)\r\n     * @param  {num} src  \r\n     * @param  {num} dest \r\n     * @return {[array]}      \r\n    */\r\n\r\n    getSrcToDestPath(src, dest){\r\n        let path = [], pathStart, pathEnd, incrementBy;\r\n        if(src > dest){\r\n            pathStart = dest;\r\n            pathEnd = src;\r\n        }else{\r\n            pathStart = src;\r\n            pathEnd = dest;\r\n        }\r\n        if(Math.abs(src - dest) % 5 === 0){\r\n            incrementBy = 5;\r\n            pathStart += 5;\r\n        }else if(Math.abs(src - dest) % 6 === 0){\r\n            incrementBy = 6;\r\n            pathStart += 6;\r\n        }else if(Math.abs(src - dest) % 4 === 0){\r\n            incrementBy = 4;\r\n            pathStart += 4;\r\n        }else{\r\n            incrementBy = 1;\r\n            pathStart += 1;\r\n        }\r\n\r\n        for(let i = pathStart; i < pathEnd; i+=incrementBy){\r\n            path.push(i);\r\n        }\r\n        return path;\r\n        }\r\n}"]},"metadata":{},"sourceType":"module"}